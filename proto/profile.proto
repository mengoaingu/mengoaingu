syntax="proto3";

package go.todoapp.proto.profile;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "backend/proto/gen";

service ProfileService {
  rpc Authorize(AuthorizeRequest) returns (AuthorizeResponse) {
    option (google.api.http) = {
      post: "/v1/passport/auth"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Auth firebase token"
      description: "Auth firebase token on the server."
      tags: "Profile"
    };
  }

  rpc GetProfile(GetProfileRequest) returns (GetProfileResponse) {
    option (google.api.http) = {
      post: "/v1/get-profile"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Get Profile"
      description: "Get Profile on the server."
      tags: "Profile"
    };
  }
}

message AuthorizeRequest {
  string id_token = 1;
}
message AuthorizeResponse {
  Data data = 1;
  message Data {
    string token = 1;
  }
}

message GetProfileRequest {}

message GetProfileResponse {
  Data data = 1;
  message Data {
    User profile = 1;
  }
}

message User {
  int64 id = 1;
  string uid = 2;
  string display_name = 3;
  string email = 4;
  string avatar = 5;
  string provider = 6;
}


